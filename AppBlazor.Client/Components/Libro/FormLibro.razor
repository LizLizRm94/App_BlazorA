@inject NavigationManager navigatorManager
@inject LibroService libroService
@inject TipoLibroService tipoLibroService
@inject IJSRuntime JS

<h2>@titulo</h2>
<EditForm Model="@oLibroFormCLS" OnValidSubmit="@guardar">
    <DataAnnotationsValidator/>
    <div class="mt-3">
        <label>Id Libro</label>
        <InputNumber readonly class="form-control" @bind-Value="oLibroFormCLS.idLibro" />
        <ValidationMessage For="(() => oLibroFormCLS.idLibro)" />
    </div>
    <div class="mt-3">
        <label>Titulo</label>
        <InputText class="form-control" @bind-Value="oLibroFormCLS.titulo" />
        <ValidationMessage For="(() => oLibroFormCLS.titulo)" />

    </div>

    <div class="mt-3">
        <label>Seleccione tipo de libro</label>
        <InputSelect class="form-control" @bind-Value="oLibroFormCLS.idtipolibro">
            <option value="0">--Seleccione--</option>
            @foreach (var item in listatipo)
            {
                <option value="@item.idtipolibro">@item.nombretipolibro</option>
            }
        </InputSelect>
        <ValidationMessage For="(()=>oLibroFormCLS.idtipolibro)" />
    </div>
    <div class="mt-3">
        <label>Resumen</label>
        <InputTextArea class="form-control" @bind-Value="oLibroFormCLS.resumen" />
        <ValidationMessage For="(() => oLibroFormCLS.resumen)" />
    </div>
    <div class="mt-3">
        <p>Seleccionar Foto</p>
        <img src="@imagePreview" alt="Image Preview" width="150"height="150" style="border:1px solid" />
    </div>

    <div class="mt-2">
        <InputFile OnChange="HandleSelected" accept="image/*" />
    </div>
    <div class="mt-4">
        <p>Seleccione el libro a subir</p>
        <InputFile OnChange="HandleFileSelected" accept=".pdf" />
        <p @onclick="(()=>descargar(oLibroFormCLS.idLibro, oLibroFormCLS.nombrearchivo))"
            style="cursor:pointer; text-decoration-color:underline"> @oLibroFormCLS.nombrearchivo</p>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button class="btn btn-danger" @onclick="@regresar">Regresar</button>
    </div>
</EditForm>

@code {
    private async Task descargar(int idlibro, string nombrearchivo)
    {
        string archivo = libroService.recuperaArchivoPorId(idlibro);
        if (archivo != null && archivo.Length > 0)
        {
            await JS.InvokeVoidAsync("descargarArchivo", archivo, nombrearchivo);
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;

        oLibroFormCLS.nombrearchivo = file.Name;

        if (file != null)
        {
            oLibroFormCLS.archivo = new byte[file.Size];

            await file.OpenReadStream().ReadAsync(oLibroFormCLS.archivo);
        }
    }

    private string? imagePreview = "/img/istockphoto-1186065957-612x612.jpg";

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        // Obtener el archivo seleccionado
        var file = e.File;

        if (file != null)
        {
            // Leer la imagen como byte[]
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);

            // Convertir la imagen a base64 para mostrarla como una URL
            imagePreview = $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";

            oLibroFormCLS.image = buffer;
        }
    }

    public LibroFormCLS oLibroFormCLS { get; set; } = new LibroFormCLS();
    [Parameter]
    public int idlibro { get; set; }
    public string titulo { get; set; } = "";
    public List<TipoLibroCLS> listatipo { get; set; } = new List<TipoLibroCLS>();

    protected override Task OnInitializedAsync()
    {
        listatipo = tipoLibroService.listarTipoLibros();

        if (idlibro == 0)
        {
            titulo = "Agregar Libro";
        }
        else
        {
            oLibroFormCLS = libroService.recuperaLibroPorId(idlibro);
            titulo = "Editar Libro: " + oLibroFormCLS.titulo;
            if(oLibroFormCLS.image != null)
            {
                imagePreview = "data:image/png;base64," + Convert.ToBase64String(oLibroFormCLS.image);
            }
        }
        return base.OnInitializedAsync();
    }

    private void guardar()
    {
        libroService.guardarLibro(oLibroFormCLS);
        navigatorManager.NavigateTo("libro");
    }


    private void regresar()
    {
        navigatorManager.NavigateTo("libro");
    }

}
